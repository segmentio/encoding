// Code generated by command: go run valid_asm.go -out valid_amd64.s -stubs valid_amd64.go. DO NOT EDIT.

#include "textflag.h"

// func validAVX2(p *byte, n uintptr) int
// Requires: AVX, AVX2, SSE, SSE2
TEXT Â·validAVX2(SB), NOSPLIT, $0-24
	MOVQ p+0(FP), AX
	MOVQ n+8(FP), CX
	SHRQ $0x04, CX
	MOVQ $0x0000000000000000, DX

loop64:
	CMPQ      CX, $0x04
	JL        loop32
	VMOVUPS   (AX), Y0
	VPOR      32(AX), Y0, Y0
	VPMOVMSKB Y0, BX
	CMPL      BX, $0x00
	JNE       done
	SUBQ      $0x04, CX
	ADDQ      $0x40, AX
	CMPQ      CX, $0x04
	JGE       loop64

loop32:
	// Consume the next 32 bytes of input.
	CMPQ      CX, $0x02
	JL        loop16
	VMOVUPS   (AX), Y0
	VPMOVMSKB Y0, BX
	CMPL      BX, $0x00
	JNE       done
	SUBQ      $0x02, CX
	ADDQ      $0x20, AX

loop16:
	// Consume the next 16 bytes of input.
	CMPQ     CX, $0x00
	JE       valid
	MOVUPS   (AX), X0
	PMOVMSKB X0, BX
	CMPL     BX, $0x00
	JNE      done

valid:
	MOVQ $0x00000001, DX

done:
	MOVQ DX, ret+16(FP)
	RET
