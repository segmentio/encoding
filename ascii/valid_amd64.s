// Code generated by command: go run valid_asm.go -out valid_amd64.s -stubs valid_amd64.go. DO NOT EDIT.

#include "textflag.h"

// func validPrint16(p *byte, n uintptr) int
// Requires: SSE, SSE2, SSE4.1
TEXT Â·validPrint16(SB), NOSPLIT, $0-24
	MOVQ   p+0(FP), AX
	MOVQ   n+8(FP), CX
	MOVQ   $0x0000000000000000, DX
	MOVQ   $0x1919191919191919, BX
	MOVQ   $0x7f7f7f7f7f7f7f7f, BP
	PINSRQ $0x00, BX, X0
	PINSRQ $0x01, BX, X0
	PINSRQ $0x00, BP, X1
	PINSRQ $0x01, BP, X1

loop16:
	CMPQ     CX, $0x00
	JE       valid
	MOVUPS   (AX), X2
	MOVUPS   X2, X3
	PMINUB   X0, X3
	PCMPEQB  X0, X3
	PMOVMSKB X3, BX
	XORL     $0x0000ffff, BX
	CMPL     BX, $0x00
	JNE      done
	MOVUPS   X2, X3
	PMAXUB   X1, X3
	PCMPEQB  X1, X3
	PMOVMSKB X3, BX
	XORL     $0x0000ffff, BX
	CMPL     BX, $0x00
	JNE      done
	DECQ     CX
	ADDQ     $0x10, AX
	JMP      loop16

valid:
	MOVQ $0x00000001, DX

done:
	MOVQ DX, ret+16(FP)
	RET
